import tiny_loader from './tiny_loader.mjs'
import {svg_data_url, as_src_view} from './view_utils.jsy'

const _mmd0 = @!>
  await tiny_loader @ 'https://cdn.jsdelivr.net/npm/mermaid@8.4.5/dist/mermaidAPI.js'
  const mermaid = window.mermaid
  mermaid.initialize @: startOnLoad: false
  return mermaid


async function _mermaid_svg_render(mermaid_src) ::
  const mermaid = await _mmd0
  let svg_xml
  try ::
    svg_xml = mermaid.render('root', mermaid_src)
  catch err ::
    console.warn @ 'Mermaid Rendering Problem:', err
    return

  // fixup SVG... but WHY?
  svg_xml = svg_xml.replace @
    'height="100%"'
    'preserveAspectRatio="xMinYMin meet"'
  return svg_xml


export class MermaidSVGView extends as_src_view(HTMLElement) ::
  _render_svg(mermaid_src) :: return _mermaid_svg_render(mermaid_src)

  async _render_src(mermaid_src, doc) ::
    const svg_src = await this._render_svg(mermaid_src)
    if ! svg_src :: return

    const root = doc.createElement('figure')
    root.innerHTML = svg_src
    this.appendChild(root)


export class MermaidImgView extends as_src_view(HTMLElement) ::
  _render_svg(mermaid_src) :: return _mermaid_svg_render(mermaid_src)

  async _render_src(mermaid_src, doc) ::
    const svg_src = await this._render_svg(mermaid_src)
    if ! svg_src :: return

    const root = doc.createElement('figure')
    const img = doc.createElement('img')
    img.src = svg_data_url(svg_src)
    root.appendChild(img)
    this.appendChild(root)


MermaidImgView.define_as @ 'mermaid-img-view'
MermaidSVGView.define_as @ 'mermaid-svg-view'

export class MermaidView extends MermaidImgView ::
MermaidView.define_as @ 'mermaid-view'

export default MermaidView

