import tiny_loader from './tiny_loader.mjs'
import {as_src_view} from './view_utils.jsy'
import {JSON5} from './deps.jsy'

class VegaLiteViewBaseElement extends as_src_view(HTMLElement) ::
  connectedCallback() ::
    super.connectedCallback()
    this.dispatchEvent @ new CustomEvent @ 'start'

  disconnectedCallback() ::
    super.disconnectedCallback()
    this.dispatchEvent @ new CustomEvent @ 'finish'

  get hover() :: return this.hasAttribute @ 'hover'
  set hover(v) ::
    if v :: this.setAttribute @ 'hover', ''
    else this.removeAttribute @ 'hover'


  async _render_src(vegalite_src) ::
    let vl_doc = this.parseDoc @ vegalite_src
    return this.renderDoc @ vl_doc

  parseDoc(vegalite_src) ::
    try :: return JSON5.parse @ vegalite_src
    catch err ::
      try :: return JSON5.parse @ `{${vegalite_src}}`
      catch err ::
        console.warn @ 'VegaLite parsing problem:', err
        return

  async renderDoc(vegalite_doc) ::
    if 'string' === typeof vegalite_doc ::
      vegalite_doc = this.parseDoc(vegalite_doc)

    const {vega, vegaLite} = await this._vegalite

    const vega_spec = this.vega_spec =
      vegaLite.compile @ vegalite_doc

    const container = this._container @
      this.ownerDocument
    const {renderer, hover}=this
    const vega_view = this.vega_view =
      new vega.View @
        vega.parse(vega_spec.spec)
        @{} renderer, hover, container

    //this.appendChild(container)
    vega_view.runAsync()

  _container(doc) :: return this

  static initialize() ::
    this._vegalite = this.prototype._vegalite =
      this._init_vegalite()
    return this

  static async _init_vegalite() ::
    ::
      const deps = @[]
        tiny_loader @ 'https://cdn.jsdelivr.net/npm/vega@5.10.0'
        tiny_loader @ 'https://cdn.jsdelivr.net/npm/vega-lite@4.7.0'

      while deps.length :: await deps.pop()

    const {vega, vegaLite} = window
    return {vega, vegaLite}


VegaLiteViewBaseElement.prototype._data = @{}
  $schema: 'https://vega.github.io/schema/vega-lite/v4.json'
  mark: 'point'


class VegaLiteViewElement extends VegaLiteViewBaseElement ::
  get renderer() :: return this.getAttribute @ 'renderer'
  set renderer(v) :: this.setAttribute @ 'renderer', v

class VegaLiteSVGViewElement extends VegaLiteViewBaseElement ::
  get renderer() :: return 'svg'

class VegaLiteCanvasViewElement extends VegaLiteViewBaseElement ::
  get renderer() :: return 'canvas'

VegaLiteViewElement.define_as @ 'vegalite-view'
VegaLiteSVGViewElement.define_as @ 'vegalite-svg-view'
VegaLiteCanvasViewElement.define_as @ 'vegalite-canvas-view'

