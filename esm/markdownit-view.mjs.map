{"version":3,"file":"markdownit-view.mjs","sources":["../code/tiny_loader.mjs","../code/view_utils.jsy","../code/markdownit-view.jsy"],"sourcesContent":["export default tiny_loader\nexport function tiny_loader(opt) {\n  const D = document\n  const src = 'string' === typeof opt ? opt : opt.src\n  if (src === opt) opt = {src: opt}\n  if (src != encodeURI(src))\n    throw new Error('Invalid script src')\n\n  let s = D.querySelector('script[src=\"'+ src + '\"]')\n  if (!s) {\n    s = D.createElement('script')\n\n    if (src.startsWith('http') && undefined === opt.crossorigin)\n      opt.crossorigin = 'anonymous'\n\n    D.head.appendChild(Object.assign(s, opt))\n  }\n  \n  if (undefined === s.promise)\n    s.promise = new Promise((resolve, reject) => {\n      s.onload = e => resolve(e.target)\n      s.onerror = e => reject(e)\n    })\n\n  return s.promise\n}\n","\nexport const as_src_view = @!\n  const _cache = new Map()\n\n  const _as_view_class = baseElement => @\n    class SrcBaseElement extends baseElement ::\n      connectedCallback() ::\n        const src = this.textContent\n        this.textContent = ''\n        this._render_src(src, this.ownerDocument)\n\n      _render_src(src) ::\n        this.src = src\n\n      static initialize() ::\n        return this\n      static define_as(key) ::\n        const klass = this.initialize()\n        customElements.define @ key, klass\n        return klass\n\n  return @\\ baseElement ::\n    let res = _cache.get(baseElement)\n    if undefined === res ::\n      res = _as_view_class(baseElement)\n      _cache.set(baseElement, res)\n    return res\n\n\nexport function raf_batch(on_render) ::\n  let q=[], tid=null\n  return @\\ ...args ::\n    q.push(...args)\n    if null === tid ::\n      tid = requestAnimationFrame @ _batch\n\n  function _batch() ::\n    const batch = q\n    q=[]; tid=null\n    on_render(batch)\n\n\nexport function fetch_cors_get(src, headers) ::\n  return fetch @ src, @{} method: 'GET', mode: 'cors', headers\nexport async function fetch_json(src, headers) ::\n  const req = await fetch_cors_get(src, headers)\n  return req.json()\nexport async function fetch_text(src, headers) ::\n  const req = await fetch_cors_get(src, headers)\n  return req.text()\n\nexport const data_url = @\\ mime, src =>\n  `data:${mime},${encodeURIComponent(src)}`\nexport const svg_data_url = src =>\n  data_url @ 'image/svg+xml', src\n\n","import tiny_loader from './tiny_loader.mjs'\nimport {as_src_view} from './view_utils.jsy'\nimport {JSON5} from './deps.jsy'\n\nexport class MarkdownitView extends as_src_view(HTMLElement) ::\n  async _render_src(markdown_src, doc) ::\n    let rendered = this._cache.get(markdown_src)\n    if undefined === rendered ::\n      const md = await this.md\n      rendered = md.render(markdown_src)\n      this._cache.set @ markdown_src, rendered\n\n    const root = doc.createElement('div')\n    root.innerHTML = rendered\n    this.appendChild(root)\n\n\n  static fence_webcomponent() ::\n    return @\\ md ::\n      const rules = md.renderer.rules\n      const prev_fence = rules.fence\n      rules.fence = function (tokens, idx, options, env, slf) ::\n        const tkn = tokens[idx]\n        const m = /\\s*[!]([\\w\\-]+)\\s*(.*)$/.exec(tkn.info)\n        if ! m ::\n          return prev_fence.apply(rules, arguments)\n\n        let [_, wc_name, wc_options] = m\n        const elem = document.createElement(`${wc_name}-view`)\n        elem.textContent = tkn.content\n        if wc_options ::\n          try ::\n            wc_options = JSON.stringify @\n              JSON5.parse @ `{${wc_options}}`\n          catch (err) ::\n          elem.setAttribute @ 'options', wc_options\n\n        return elem.outerHTML\n\n\n  static initialize() ::\n    this.prototype._cache = new Map()\n    this.md = this.prototype.md =\n      this._init_markdownit()\n    return this\n\n  static async _init_markdownit() ::\n    ::\n      const deps = @[]\n        tiny_loader @ 'https://cdn.jsdelivr.net/npm/markdown-it@10.0.0/dist/markdown-it.min.js'\n        tiny_loader @ 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.17.1/build/highlight.min.js'\n\n      while deps.length :: await deps.pop()\n\n    const md = window.markdownit @:\n      highlight(str, lang, ...args) ::\n        if lang && hljs.getLanguage(lang) ::\n          try ::\n            return hljs.highlight(lang, str).value\n          catch (err) ::\n            console.warn @ '[hljs exception]:', {lang}, err\n\n        return '' // use external default escaping\n\n    md.use @ this.fence_webcomponent(md)\n    return md\n\n\nMarkdownitView.define_as @ 'markdownit-view'\nexport default MarkdownitView\n\n"],"names":[],"mappings":";;;EAEE;EACA,YAAY,QAAQ;EACpB;EACA;IACE,gBAAgB,oBAAoB;;EAEtC,wBAAwB,cAAc,QAAQ,IAAI;EAClD;IACE,oBAAoB,QAAQ;;IAE5B,mBAAmB,MAAM;MACvB,kBAAkB;;IAEpB;;;EAGF;IACE;MACE;MACA;;;EAGJ;AACF;;;ECvBE;;EAEA;IACE;MACE;QACE;QACA,mBAAmB;QACnB;;MAEF;QACE;;MAEF;QACE;MACF;QACE;QACA,sBAAuB;QACvB;;EAEN;IACE;QACE;MACA;MACA;IACF;;;ECrBF;IACE;QACE;MACA;MACA;MACA,gBAAiB;;IAEnB,+BAA+B,KAAK;IACpC;IACA;;;EAGF;IACE;MACE;MACA;MACA;QACE;QACA,UAAU,yBAAyB;YAChC;UACD;;QAEF;QACA,oCAAoC,GAAG,QAAQ,MAAM;QACrD;YACE;UACA;YACE;cACE,YAAc,IAAI,WAAW;UACjC;UACA,kBAAmB,SAAU;;QAE/B;;;EAGN;IACE;IACA;MACE;IACF;;EAEF;;MAEI;QACE,YAAa;QACb,YAAa;;aAEV,cAAe;;IAEtB;MACE;YACI;UACA;YACE;UACF;YACE,aAAc,mBAAoB;;QAEtC,OAAO,EAAE;;IAEb,OAAQ;IACR;;;AAGJ,yBAA0B;;;;;"}