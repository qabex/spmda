{"version":3,"file":"lsdir-view.mjs","sources":["../code/view_utils.jsy","../code/lsdir-view.jsy"],"sourcesContent":["\nexport const as_src_view = @!\n  const _cache = new Map()\n\n  const _as_view_class = baseElement => @\n    class SrcBaseElement extends baseElement ::\n      connectedCallback() ::\n        const src = this.textContent\n        this.textContent = ''\n        this._render_src(src, this.ownerDocument)\n\n      _render_src(src) ::\n        this.src = src\n\n      static initialize() ::\n        return this\n      static define_as(key) ::\n        const klass = this.initialize()\n        customElements.define @ key, klass\n        return klass\n\n  return @\\ baseElement ::\n    let res = _cache.get(baseElement)\n    if undefined === res ::\n      res = _as_view_class(baseElement)\n      _cache.set(baseElement, res)\n    return res\n\n\nexport function raf_batch(on_render) ::\n  let q=[], tid=null\n  return @\\ ...args ::\n    q.push(...args)\n    if null === tid ::\n      tid = requestAnimationFrame @ _batch\n\n  function _batch() ::\n    const batch = q\n    q=[]; tid=null\n    on_render(batch)\n\n\nexport function fetch_cors_get(src, headers) ::\n  return fetch @ src, @{} method: 'GET', mode: 'cors', headers\nexport async function fetch_json(src, headers) ::\n  const req = await fetch_cors_get(src, headers)\n  return req.json()\nexport async function fetch_text(src, headers) ::\n  const req = await fetch_cors_get(src, headers)\n  return req.text()\n\nexport const data_url = @\\ mime, src =>\n  `data:${mime},${encodeURIComponent(src)}`\nexport const svg_data_url = src =>\n  data_url @ 'image/svg+xml', src\n\n","import { raf_batch, fetch_json, fetch_text } from './view_utils.jsy'\n\nexport class LsDirView extends HTMLElement ::\n  async connectedCallback() ::\n    const raf_q = this.bind_batch_render()\n\n    const mask = this.as_mask_filter @\n      this.getAttribute('mask')\n    const skip = this.as_prefix_filter @\n      this.getAttribute('prefix')\n    const all_docs = await this.fetch_all @\n      this.getAttribute('src')\n\n    const ctx = this.render_ctx()\n    for const [fname, doc] of await all_docs ::\n      if mask(doc.meta) :: continue\n      if skip(fname, doc) :: continue\n\n      raf_q @\n        await this.render_doc @\n          await doc.source, ctx\n\n  bind_batch_render() ::\n    return raf_batch @\\ batch ::\n      for const elem of batch ::\n        this.appendChild(elem)\n\n  render_ctx() ::\n    return @{}\n      view: this.getAttribute('view') || this.default_view\n      doc: this.ownerDocument\n\n  render_doc(doc_src, {view, doc}) ::\n    const elem = doc.createElement(view)\n    elem.textContent = doc_src\n    return elem\n\n  async fetch_all(src_path) ::\n    if ! src_path ::\n      src_path = 'all-docs.json'\n\n    const all_docs = await fetch_json @\n      src_path, this._fetch_headers\n    return all_docs.map @\n      this.fetch_doc.bind(this)\n\n  fetch_doc(doc) ::\n    const parts = doc.fname.split(/\\s*--\\s*/)\n    doc.name = parts.pop()\n    doc.prefix = parts.shift()\n    doc.meta = new Set @ parts\n\n    doc.source = fetch_text @\n      doc.path, this._fetch_headers\n    return @[] doc.fname, doc\n\n  as_prefix_filter(prefix) ::\n    if ! prefix ::\n      return () => false\n\n    if prefix.endsWith('+') ::\n      prefix = prefix.replace(/\\+$/,'')\n      return fname => fname < prefix\n\n    return fname => ! fname.startsWith(prefix)\n\n  as_mask_filter(mask_keys) ::\n    mask_keys = mask_keys ? mask_keys.split(/\\s+/) : ['skip', 'hide']\n    return @\\ meta ::\n      for const k of mask_keys ::\n        if meta.has(k) ::\n          return true\n      return false\n\nObject.assign @ LsDirView.prototype, @{}\n  default_view: 'doc-view'\n  _fetch_headers: {}\n\ncustomElements.define @ 'lsdir-view', LsDirView\n\nexport default LsDirView\n\n"],"names":[],"mappings":";EA8BE;EACA;IACE;QACE;MACA,4BAA6B;;EAEjC;IACE;IACA;IACA;;;;EAIF,aAAc,KAAS,QAAS,KAAK,QAAQ,MAAM;;EAEnD;EACA;;EAEA;EACA;;;EC9CA;IACE;;IAEA;MACE,kBAAkB,MAAM;IAC1B;MACE,kBAAkB,QAAQ;IAC5B;MACE,kBAAkB,KAAK;;IAEzB;SACG;UACC,iBAAkB;UAClB,mBAAoB;;MAEtB;QACE;UACE;;EAER;IACE;WACK;QACD;;EAEN;IACE;MACE,wBAAwB,MAAM;MAC9B;;EAEJ;IACE;IACA;IACA;;EAEF;QACK;MACD,WAAW;;IAEb;MACE;IACF;MACE;;EAEJ;IACE,8BAA8B,UAAU;IACxC;IACA;IACA,mBAAoB;;IAEpB;MACE;IACF,QAAU;;EAEZ;QACK;MACD;;QAEA,gBAAiB,GAAG;MACpB,wBAAwB,KAAK,CAAC,EAAE;MAChC;;IAEF;;EAEF;IACE,wCAAwC,KAAK,KAAK,MAAM,EAAE,MAAM;IAChE;WACK;YACC;UACA;MACJ;;AAEN,cAAe;EACb,cAAc;EACd;;AAEF,sBAAuB,YAAa;;;;;"}